==================================================
 Intrusion Detection System Analysis Report
==================================================
Timestamp: 2025-05-02 11:18:42
Dataset: KAGGLE
Input Directory: ./datasets
Output Directory: ./kaggle_analysis_results_final_v1
Sample Size: 20000
Run ANN: True
Run Fuzzy C-Means: True
Run SHAP: True
Feature Selection Correlation Threshold: 0.9
--------------------------------------------------

--- Loading Dataset: KAGGLE ---
Successfully loaded ./datasets/cybersecurity_intrusion_data.csv
Original dataset shape: (9537, 11)
Attempting conversion of object columns to numeric for Kaggle dataset...
Numeric conversion attempt complete.
Dropping columns: ['session_id']
Dataset has fewer than 20000 rows (9537), using the full dataset.
Dataset shape after initial processing: (9537, 10)
Converting target column 'attack_detected' from float to integer.

Dataset Head:
   network_packet_size protocol_type  login_attempts  ...  browser_type unusual_time_access  attack_detected
0                  599           TCP               4  ...          Edge                   0                1
1                  472           TCP               3  ...       Firefox                   0                0
2                  629           TCP               3  ...        Chrome                   0                1
3                  804           UDP               4  ...       Unknown                   0                1
4                  453           TCP               5  ...       Firefox                   0                0

[5 rows x 10 columns]

Dataset Info:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 9537 entries, 0 to 9536
Data columns (total 10 columns):
 #   Column               Non-Null Count  Dtype  
---  ------               --------------  -----  
 0   network_packet_size  9537 non-null   int64  
 1   protocol_type        9537 non-null   object 
 2   login_attempts       9537 non-null   int64  
 3   session_duration     9537 non-null   float64
 4   encryption_used      7571 non-null   object 
 5   ip_reputation_score  9537 non-null   float64
 6   failed_logins        9537 non-null   int64  
 7   browser_type         9537 non-null   object 
 8   unusual_time_access  9537 non-null   int64  
 9   attack_detected      9537 non-null   int64  
dtypes: float64(2), int64(5), object(3)
memory usage: 745.2+ KB

Target Column ('attack_detected') Distribution:
attack_detected
0    0.552899
1    0.447101
Name: proportion, dtype: float64

############################################################
 RUNNING ANALYSIS: BEFORE OUTLIER REMOVAL
############################################################

--- Basic Exploratory Data Analysis (EDA) ---

=== Dataset Info ===
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 9537 entries, 0 to 9536
Data columns (total 10 columns):
 #   Column               Non-Null Count  Dtype  
---  ------               --------------  -----  
 0   network_packet_size  9537 non-null   int64  
 1   protocol_type        9537 non-null   object 
 2   login_attempts       9537 non-null   int64  
 3   session_duration     9537 non-null   float64
 4   encryption_used      7571 non-null   object 
 5   ip_reputation_score  9537 non-null   float64
 6   failed_logins        9537 non-null   int64  
 7   browser_type         9537 non-null   object 
 8   unusual_time_access  9537 non-null   int64  
 9   attack_detected      9537 non-null   int64  
dtypes: float64(2), int64(5), object(3)
memory usage: 745.2+ KB


=== Statistical Summary (Numeric Columns) ===
       network_packet_size  login_attempts  ...  unusual_time_access  attack_detected
count             9,537.00        9,537.00  ...             9,537.00         9,537.00
mean                500.43            4.03  ...                 0.15             0.45
std                 198.38            1.96  ...                 0.36             0.50
min                  64.00            1.00  ...                 0.00             0.00
25%                 365.00            3.00  ...                 0.00             0.00
50%                 499.00            4.00  ...                 0.00             0.00
75%                 635.00            5.00  ...                 0.00             1.00
max               1,285.00           13.00  ...                 1.00             1.00

[8 rows x 7 columns]

=== Statistical Summary (Object Columns) ===
       protocol_type encryption_used browser_type
count           9537            7571         9537
unique             3               2            5
top              TCP             AES       Chrome
freq            6624            4706         5137

=== Missing Values per Column (Showing > 0) ===
encryption_used    1966
dtype: int64

=== Target Variable ('attack_detected') Distribution ===
Value Counts:
attack_detected
0    5273
1    4264
Name: count, dtype: int64

Normalized:
attack_detected
0    0.552899
1    0.447101
Name: proportion, dtype: float64

--- Identifying Features and Target ---
Target column: 'attack_detected'
Identified 9 features.
  - 6 numeric features.
  - 3 categorical features.

--- Advanced Exploratory Data Analysis (EDA) ---

=== Feature Type Summary (KAGGLE) ===
Number of numeric features identified: 6
Number of categorical features identified: 3

Calculating correlations for numeric features...

=== Features to drop based on correlation threshold > 0.9 ===
No features identified for dropping based on the threshold.

=== High Correlation Summary (Absolute > 0.8) for Information ===
No feature pairs with absolute correlation > 0.8 found.

--- Splitting Data (kaggle_orig) (80% Train, 20% Test) ---
X_train shape: (7629, 9), y_train shape: (7629,)
X_test shape: (1908, 9), y_test shape: (1908,)
Data split successfully.

Fitting UNSCALED preprocessor (kaggle_orig)...
Unscaled preprocessor fitted.

Fitting SCALED preprocessor (kaggle_orig)...
Scaled preprocessor fitted.

========================================
 Model Training: UNSCALED Data (kaggle_orig) - RF Only
========================================

--- Training and Evaluating Base RandomForestClassifier (KAGGLE_ORIG_UNSCALED) ---
Fitting Base RandomForest pipeline...
Base RandomForest fitting completed in 0.56 seconds.

--- Evaluating Base RandomForest Model on Test Set ---
Prediction completed in 0.02 seconds.
Accuracy: 0.8826

Classification Report:
              precision    recall  f1-score   support

           0       0.83      0.99      0.90      1055
           1       0.99      0.75      0.85       853

    accuracy                           0.88      1908
   macro avg       0.91      0.87      0.88      1908
weighted avg       0.90      0.88      0.88      1908


Confusion Matrix:
[[1048    7]
 [ 217  636]]
ROC AUC Score: 0.8756

--- Training and Evaluating RandomForestClassifier (KAGGLE_ORIG_UNSCALED) ---
Running GridSearchCV with 3 folds...
Fitting 3 folds for each of 24 candidates, totalling 72 fits
GridSearchCV completed in 4.27 seconds.

Best Parameters Found (RandomForest): {'classifier__max_depth': 10, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 5, 'classifier__n_estimators': 150}
Best Cross-validation Accuracy (RandomForest): 0.8954

--- Evaluating Tuned RandomForest Model on Test Set ---
Prediction completed in 0.01 seconds.
Accuracy: 0.8857

Classification Report:
              precision    recall  f1-score   support

           0       0.83      1.00      0.91      1055
           1       1.00      0.74      0.85       853

    accuracy                           0.89      1908
   macro avg       0.91      0.87      0.88      1908
weighted avg       0.91      0.89      0.88      1908


Confusion Matrix:
[[1055    0]
 [ 218  635]]
ROC AUC Score: 0.8719

Best Tuned RandomForest model saved to: ./kaggle_analysis_results_final_v1/tuned_rf_model_kaggle_orig_unscaled.pkl
Saved model size: 2.321 MB

========================================
 Model Training: SCALED Data (kaggle_orig)
========================================

--- Training and Evaluating Base RandomForestClassifier (KAGGLE_ORIG_SCALED) ---
Fitting Base RandomForest pipeline...
Base RandomForest fitting completed in 0.57 seconds.

--- Evaluating Base RandomForest Model on Test Set ---
Prediction completed in 0.02 seconds.
Accuracy: 0.8826

Classification Report:
              precision    recall  f1-score   support

           0       0.83      0.99      0.90      1055
           1       0.99      0.75      0.85       853

    accuracy                           0.88      1908
   macro avg       0.91      0.87      0.88      1908
weighted avg       0.90      0.88      0.88      1908


Confusion Matrix:
[[1048    7]
 [ 217  636]]
ROC AUC Score: 0.8758

--- Training and Evaluating RandomForestClassifier (KAGGLE_ORIG_SCALED) ---
Running GridSearchCV with 3 folds...
Fitting 3 folds for each of 24 candidates, totalling 72 fits
GridSearchCV completed in 3.30 seconds.

Best Parameters Found (RandomForest): {'classifier__max_depth': 10, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 5, 'classifier__n_estimators': 150}
Best Cross-validation Accuracy (RandomForest): 0.8954

--- Evaluating Tuned RandomForest Model on Test Set ---
Prediction completed in 0.01 seconds.
Accuracy: 0.8857

Classification Report:
              precision    recall  f1-score   support

           0       0.83      1.00      0.91      1055
           1       1.00      0.74      0.85       853

    accuracy                           0.89      1908
   macro avg       0.91      0.87      0.88      1908
weighted avg       0.91      0.89      0.88      1908


Confusion Matrix:
[[1055    0]
 [ 218  635]]
ROC AUC Score: 0.8718

Best Tuned RandomForest model saved to: ./kaggle_analysis_results_final_v1/tuned_rf_model_kaggle_orig_scaled.pkl
Saved model size: 2.327 MB

--- Tuning PCA Components + Evaluating PCA + Base RandomForestClassifier (KAGGLE_ORIG_SCALED) ---

Tuning PCA n_components in range: [5, 10, 15]...
  Testing PCA with n_components=5...
    n=5: Accuracy=0.7662, Fit Time=1.19s, Pred Time=0.02s
  Testing PCA with n_components=10...
    n=10: Accuracy=0.8239, Fit Time=1.70s, Pred Time=0.02s
  Testing PCA with n_components=15...
    n=15: Accuracy=0.8422, Fit Time=1.71s, Pred Time=0.02s

--- Best PCA Configuration Found ---
Best n_components: 15
Best Accuracy: 0.8422

PCA Tuning Results Summary:
   n_components  accuracy  fit_time  pred_time
2            15  0.842243  1.705600   0.018690
1            10  0.823899  1.697173   0.018126
0             5  0.766247  1.189334   0.019307

--- Evaluating Best PCA (n=15) + RandomForest Model on Test Set ---
Prediction time for best model: 0.02s
Accuracy (already calculated): 0.8422

Classification Report:
              precision    recall  f1-score   support

           0       0.82      0.92      0.87      1055
           1       0.88      0.75      0.81       853

    accuracy                           0.84      1908
   macro avg       0.85      0.83      0.84      1908
weighted avg       0.85      0.84      0.84      1908


Confusion Matrix:
[[971  84]
 [217 636]]
ROC AUC Score: 0.8601

--- Training and Evaluating ANN + SMOTE (KAGGLE_ORIG_SCALED) ---
Preprocessing data for ANN...
Input dimension for ANN: 17
Applying SMOTE to the training data...
Shape before SMOTE: (7629, 17), Class distribution: [4218 3411]
SMOTE completed in 0.05 seconds.
Shape after SMOTE: (8436, 17), Class distribution: [4218 4218]

ANN Model Summary:
Model: "sequential"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓
┃ Layer (type)                         ┃ Output Shape                ┃         Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩
│ dense (Dense)                        │ (None, 64)                  │           1,152 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dropout (Dropout)                    │ (None, 64)                  │               0 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dense_1 (Dense)                      │ (None, 32)                  │           2,080 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dropout_1 (Dropout)                  │ (None, 32)                  │               0 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dense_2 (Dense)                      │ (None, 1)                   │              33 │
└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘
 Total params: 3,265 (12.75 KB)
 Trainable params: 3,265 (12.75 KB)
 Non-trainable params: 0 (0.00 B)


Training ANN model...
Epoch 1/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1:46[0m 1s/step - accuracy: 0.4375 - loss: 0.7999[1m 66/106[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 771us/step - accuracy: 0.5613 - loss: 0.6911[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 6ms/step - accuracy: 0.5935 - loss: 0.6666  [1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 16ms/step - accuracy: 0.5942 - loss: 0.6661 - val_accuracy: 0.7287 - val_loss: 0.5557
Epoch 2/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 18ms/step - accuracy: 0.7344 - loss: 0.5830[1m 61/106[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 846us/step - accuracy: 0.7263 - loss: 0.5586[1m 93/106[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 1ms/step - accuracy: 0.7322 - loss: 0.5492  [1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.7346 - loss: 0.5455 - val_accuracy: 0.7713 - val_loss: 0.4966
Epoch 3/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 20ms/step - accuracy: 0.7656 - loss: 0.4745[1m 84/106[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 608us/step - accuracy: 0.7782 - loss: 0.4873[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.7803 - loss: 0.4845 - val_accuracy: 0.7855 - val_loss: 0.4618
Epoch 4/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 20ms/step - accuracy: 0.7969 - loss: 0.4106[1m 72/106[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 709us/step - accuracy: 0.7886 - loss: 0.4688[1m101/106[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 1ms/step - accuracy: 0.7915 - loss: 0.4656  [1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.7921 - loss: 0.4648 - val_accuracy: 0.7773 - val_loss: 0.4587
Epoch 5/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 17ms/step - accuracy: 0.8438 - loss: 0.4009[1m 79/106[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 646us/step - accuracy: 0.8252 - loss: 0.4224[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8245 - loss: 0.4222 - val_accuracy: 0.7861 - val_loss: 0.4461
Epoch 6/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 19ms/step - accuracy: 0.6562 - loss: 0.6143[1m 65/106[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 785us/step - accuracy: 0.8204 - loss: 0.4225[1m 94/106[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 1ms/step - accuracy: 0.8243 - loss: 0.4171  [1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8254 - loss: 0.4154 - val_accuracy: 0.8081 - val_loss: 0.4085
Epoch 7/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 22ms/step - accuracy: 0.8594 - loss: 0.3335[1m 81/106[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 634us/step - accuracy: 0.8433 - loss: 0.3882[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8439 - loss: 0.3878 - val_accuracy: 0.8146 - val_loss: 0.4082
Epoch 8/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 21ms/step - accuracy: 0.8750 - loss: 0.3572[1m 74/106[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 692us/step - accuracy: 0.8598 - loss: 0.3707[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8581 - loss: 0.3706 - val_accuracy: 0.8300 - val_loss: 0.3734
Epoch 9/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 17ms/step - accuracy: 0.8594 - loss: 0.2957[1m 47/106[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 1ms/step - accuracy: 0.8540 - loss: 0.3638 [1m 64/106[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 2ms/step - accuracy: 0.8556 - loss: 0.3636[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8572 - loss: 0.3630 - val_accuracy: 0.8312 - val_loss: 0.3763
Epoch 10/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 18ms/step - accuracy: 0.8750 - loss: 0.3391[1m 45/106[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 1ms/step - accuracy: 0.8690 - loss: 0.3478 [1m 64/106[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 2ms/step - accuracy: 0.8695 - loss: 0.3466[1m 85/106[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step - accuracy: 0.8698 - loss: 0.3459[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8695 - loss: 0.3464 - val_accuracy: 0.8318 - val_loss: 0.3609
Epoch 11/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 19ms/step - accuracy: 0.8594 - loss: 0.3775[1m 76/106[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 672us/step - accuracy: 0.8723 - loss: 0.3405[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8724 - loss: 0.3406 - val_accuracy: 0.8312 - val_loss: 0.3655
Epoch 12/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 18ms/step - accuracy: 0.8125 - loss: 0.4413[1m 76/106[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 681us/step - accuracy: 0.8745 - loss: 0.3384[1m103/106[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 1ms/step - accuracy: 0.8747 - loss: 0.3382  [1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8749 - loss: 0.3380 - val_accuracy: 0.8329 - val_loss: 0.3589
Epoch 13/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 17ms/step - accuracy: 0.9062 - loss: 0.2967[1m 86/106[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 596us/step - accuracy: 0.8805 - loss: 0.3246[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8808 - loss: 0.3247 - val_accuracy: 0.8329 - val_loss: 0.3539
Epoch 14/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 21ms/step - accuracy: 0.8906 - loss: 0.3180[1m 87/106[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 586us/step - accuracy: 0.8758 - loss: 0.3346[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8767 - loss: 0.3324 - val_accuracy: 0.8329 - val_loss: 0.3476
Epoch 15/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 17ms/step - accuracy: 0.7656 - loss: 0.5342[1m 55/106[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 944us/step - accuracy: 0.8796 - loss: 0.3192[1m 75/106[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 1ms/step - accuracy: 0.8812 - loss: 0.3177  [1m 93/106[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 2ms/step - accuracy: 0.8815 - loss: 0.3178[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step - accuracy: 0.8818 - loss: 0.3175 - val_accuracy: 0.8335 - val_loss: 0.3559
Epoch 16/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 18ms/step - accuracy: 0.8750 - loss: 0.3229[1m 81/106[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 627us/step - accuracy: 0.8817 - loss: 0.3148[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8823 - loss: 0.3138 - val_accuracy: 0.8347 - val_loss: 0.3441
Epoch 17/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 17ms/step - accuracy: 0.8906 - loss: 0.2807[1m 73/106[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 703us/step - accuracy: 0.8891 - loss: 0.3041[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8887 - loss: 0.3051 - val_accuracy: 0.8341 - val_loss: 0.3535
Epoch 18/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 19ms/step - accuracy: 0.9062 - loss: 0.2878[1m 65/106[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 795us/step - accuracy: 0.8924 - loss: 0.2984[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8904 - loss: 0.3012 - val_accuracy: 0.8347 - val_loss: 0.3537
Epoch 19/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 18ms/step - accuracy: 0.9062 - loss: 0.2859[1m 41/106[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 1ms/step - accuracy: 0.8869 - loss: 0.3055 [1m 59/106[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 2ms/step - accuracy: 0.8868 - loss: 0.3063[1m 77/106[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 2ms/step - accuracy: 0.8875 - loss: 0.3054[1m 96/106[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 2ms/step - accuracy: 0.8877 - loss: 0.3049[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step - accuracy: 0.8878 - loss: 0.3047 - val_accuracy: 0.8383 - val_loss: 0.3471
Epoch 20/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 18ms/step - accuracy: 0.8750 - loss: 0.3302[1m 60/106[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 849us/step - accuracy: 0.8812 - loss: 0.3116[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8850 - loss: 0.3058 - val_accuracy: 0.8365 - val_loss: 0.3426
Epoch 21/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 18ms/step - accuracy: 0.9062 - loss: 0.3050[1m 63/106[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 820us/step - accuracy: 0.9004 - loss: 0.2881[1m104/106[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 979us/step - accuracy: 0.8969 - loss: 0.2925[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8967 - loss: 0.2927 - val_accuracy: 0.8353 - val_loss: 0.3530
Epoch 22/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 21ms/step - accuracy: 0.9062 - loss: 0.2440[1m 79/106[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 648us/step - accuracy: 0.8978 - loss: 0.2848[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8965 - loss: 0.2866 - val_accuracy: 0.8347 - val_loss: 0.3497
Epoch 23/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 21ms/step - accuracy: 0.8906 - loss: 0.2568[1m 90/106[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 564us/step - accuracy: 0.8949 - loss: 0.2845[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8943 - loss: 0.2863 - val_accuracy: 0.8389 - val_loss: 0.3402
Epoch 24/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 19ms/step - accuracy: 0.8750 - loss: 0.3016[1m 83/106[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 616us/step - accuracy: 0.8922 - loss: 0.2957[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8927 - loss: 0.2950 - val_accuracy: 0.8341 - val_loss: 0.3513
Epoch 25/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 21ms/step - accuracy: 0.8125 - loss: 0.4303[1m 25/106[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step - accuracy: 0.8620 - loss: 0.3440 [1m 43/106[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 2ms/step - accuracy: 0.8742 - loss: 0.3234[1m 60/106[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step - accuracy: 0.8804 - loss: 0.3134[1m 90/106[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step - accuracy: 0.8846 - loss: 0.3072[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step - accuracy: 0.8858 - loss: 0.3056 - val_accuracy: 0.8395 - val_loss: 0.3441
Epoch 26/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 22ms/step - accuracy: 0.8750 - loss: 0.3562[1m 77/106[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 661us/step - accuracy: 0.8938 - loss: 0.2927[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8935 - loss: 0.2928 - val_accuracy: 0.8389 - val_loss: 0.3566
Epoch 27/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 18ms/step - accuracy: 0.8906 - loss: 0.2773[1m 63/106[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 828us/step - accuracy: 0.8842 - loss: 0.3064[1m 89/106[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 1ms/step - accuracy: 0.8853 - loss: 0.3042  [1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8862 - loss: 0.3023 - val_accuracy: 0.8383 - val_loss: 0.3592
Epoch 28/30
[1m  1/106[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 21ms/step - accuracy: 0.9531 - loss: 0.1880[1m 77/106[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 666us/step - accuracy: 0.8975 - loss: 0.2786[1m106/106[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8957 - loss: 0.2822 - val_accuracy: 0.8395 - val_loss: 0.3443
Epoch 28: early stopping
Restoring model weights from the end of the best epoch: 23.
ANN training completed in 8.18 seconds.

--- Evaluating ANN + SMOTE Model on Test Set ---
[1m 1/60[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m25s[0m 426ms/step[1m60/60[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 7ms/step   [1m60/60[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 7ms/step
Prediction completed in 0.89 seconds.
Accuracy: 0.8836

Classification Report:
              precision    recall  f1-score   support

           0       0.83      1.00      0.90      1055
           1       0.99      0.75      0.85       853

    accuracy                           0.88      1908
   macro avg       0.91      0.87      0.88      1908
weighted avg       0.90      0.88      0.88      1908


Confusion Matrix:
[[1050    5]
 [ 217  636]]

ANN model saved to: ./kaggle_analysis_results_final_v1/ann_smote_model_kaggle_orig_scaled.keras
Saved model size: 0.066 MB

--- Running Fuzzy C-Means Clustering (KAGGLE_ORIG_SCALED) ---
Preprocessing numeric data for FCM...
Scaled numeric data shape for FCM: (9537, 6)

--- Running Base Fuzzy C-Means (n=2, m=2.0) ---
Base FCM clustering completed in 0.02 seconds.

=== Base Fuzzy C-Means Results ===
Accuracy: 0.6190
Classification Report:
              precision    recall  f1-score   support

           0       0.67      0.62      0.64      5273
           1       0.57      0.61      0.59      4264

    accuracy                           0.62      9537
   macro avg       0.62      0.62      0.62      9537
weighted avg       0.62      0.62      0.62      9537

Confusion Matrix:
[[3289 1984]
 [1650 2614]]
Silhouette Score: 0.1170

--- Running Tuned Fuzzy C-Means ---

Tuning FCM parameters (n_clusters, m)...
  Trying n_clusters=2, m=1.5...
    FCM iteration took 0.15 seconds.
    Accuracy: 0.6218, Silhouette: 0.1232, FPC: 0.5457
  Trying n_clusters=2, m=2.0...
    FCM iteration took 0.02 seconds.
    Accuracy: 0.6190, Silhouette: 0.1170, FPC: 0.5000
  Trying n_clusters=2, m=2.5...
    FCM iteration took 0.01 seconds.
    Accuracy: 0.6124, Silhouette: 0.1158, FPC: 0.5000
  Trying n_clusters=3, m=1.5...
    FCM iteration took 0.58 seconds.
    Accuracy: 0.6366, Silhouette: 0.1157, FPC: 0.4056
  Trying n_clusters=3, m=2.0...
    FCM iteration took 0.02 seconds.
    Accuracy: 0.6255, Silhouette: 0.1084, FPC: 0.3333
  Trying n_clusters=3, m=2.5...
    FCM iteration took 0.02 seconds.
    Accuracy: 0.6183, Silhouette: 0.1068, FPC: 0.3333
  Trying n_clusters=4, m=1.5...
    FCM iteration took 0.37 seconds.
    Accuracy: 0.6219, Silhouette: 0.1150, FPC: 0.3496
  Trying n_clusters=4, m=2.0...
    FCM iteration took 0.02 seconds.
    Accuracy: 0.6801, Silhouette: 0.0804, FPC: 0.2500
  Trying n_clusters=4, m=2.5...
    FCM iteration took 0.02 seconds.
    Accuracy: 0.6545, Silhouette: 0.0755, FPC: 0.2500

--- Best Fuzzy C-Means Results (from Tuning) ---
Best Parameters Found: n_clusters=4, m=2.0
Best Accuracy (from tuning evaluation): 0.6801

Classification Report (Best FCM):
              precision    recall  f1-score   support

           0       0.78      0.59      0.67      5273
           1       0.61      0.79      0.69      4264

    accuracy                           0.68      9537
   macro avg       0.69      0.69      0.68      9537
weighted avg       0.70      0.68      0.68      9537


Confusion Matrix:
[[3100 2173]
 [ 878 3386]]
Silhouette Score (Best): 0.0804

FCM Tuning Results Summary:
   n_clusters    m  accuracy  silhouette       fpc
7           4  2.0  0.680088    0.080438  0.250000
8           4  2.5  0.654504    0.075546  0.250000
3           3  1.5  0.636573    0.115714  0.405563
4           3  2.0  0.625459    0.108371  0.333333
6           4  1.5  0.621894    0.114989  0.349602
0           2  1.5  0.621789    0.123177  0.545696
1           2  2.0  0.618958    0.117038  0.500000
5           3  2.5  0.618329    0.106762  0.333333
2           2  2.5  0.612352    0.115770  0.500000

Re-running FCM with best params (n=4, m=2.0) to get centers...
Best Tuned Fuzzy C-Means centers saved to: ./kaggle_analysis_results_final_v1/tuned_fcm_centers_kaggle_orig_scaled_n4_m2.0.pkl
Saved centers file size: 0.000325 MB

--- SHAP Analysis (Based on Tuned SCALED RF - kaggle_orig) ---

--- Running SHAP Analysis (KAGGLE_ORIG_SCALED) ---
Preprocessing test data for SHAP...
Shape of data transformed for SHAP: (1908, 17)
Number of features for SHAP: 17
Creating SHAP TreeExplainer...
Calculating SHAP values for 100 samples...
SHAP calculation took 0.23 seconds.
SHAP values format: Single array (samples, features, classes).

=== Mean Absolute SHAP Values (Feature Importance) ===
failed_logins              0.191924
ip_reputation_score        0.096638
login_attempts             0.089517
browser_type_Unknown       0.027134
session_duration           0.009694
browser_type_Chrome        0.007731
encryption_used_AES        0.005814
network_packet_size        0.003830
browser_type_Firefox       0.003180
unusual_time_access        0.002359
browser_type_Edge          0.002194
encryption_used_Missing    0.001672
encryption_used_DES        0.001508
protocol_type_UDP          0.001446
protocol_type_TCP          0.001211
browser_type_Safari        0.000863
protocol_type_ICMP         0.000406
dtype: float64

=== Top 10 Most Important Features (SHAP) ===
failed_logins           0.191924
ip_reputation_score     0.096638
login_attempts          0.089517
browser_type_Unknown    0.027134
session_duration        0.009694
browser_type_Chrome     0.007731
encryption_used_AES     0.005814
network_packet_size     0.003830
browser_type_Firefox    0.003180
unusual_time_access     0.002359
dtype: float64

Generating SHAP Summary Plot (KAGGLE_ORIG_SCALED) (Class 1)...

========================================
 Correlation Feature Selection (kaggle_orig)
========================================

No features identified for dropping based on correlation threshold. Skipping runs on correlation selected features.

--- Removing Outliers using IQR (Factor=1.5) ---
Identifying outliers in numeric features...
Identified 2239 rows with outliers across numeric features.
Removed 2239 rows containing outliers.
Dataset shape after outlier removal: (7298, 10)

############################################################
 RUNNING ANALYSIS: AFTER OUTLIER REMOVAL
############################################################

--- Basic Exploratory Data Analysis (EDA) ---

=== Dataset Info ===
<class 'pandas.core.frame.DataFrame'>
Index: 7298 entries, 0 to 9534
Data columns (total 10 columns):
 #   Column               Non-Null Count  Dtype  
---  ------               --------------  -----  
 0   network_packet_size  7298 non-null   int64  
 1   protocol_type        7298 non-null   object 
 2   login_attempts       7298 non-null   int64  
 3   session_duration     7298 non-null   float64
 4   encryption_used      5783 non-null   object 
 5   ip_reputation_score  7298 non-null   float64
 6   failed_logins        7298 non-null   int64  
 7   browser_type         7298 non-null   object 
 8   unusual_time_access  7298 non-null   int64  
 9   attack_detected      7298 non-null   int64  
dtypes: float64(2), int64(5), object(3)
memory usage: 627.2+ KB


=== Statistical Summary (Numeric Columns) ===
       network_packet_size  login_attempts  ...  unusual_time_access  attack_detected
count             7,298.00        7,298.00  ...             7,298.00         7,298.00
mean                498.12            3.90  ...                 0.00             0.41
std                 194.97            1.78  ...                 0.00             0.49
min                  64.00            1.00  ...                 0.00             0.00
25%                 366.25            3.00  ...                 0.00             0.00
50%                 496.00            4.00  ...                 0.00             0.00
75%                 632.00            5.00  ...                 0.00             1.00
max               1,040.00            8.00  ...                 0.00             1.00

[8 rows x 7 columns]

=== Statistical Summary (Object Columns) ===
       protocol_type encryption_used browser_type
count           7298            5783         7298
unique             3               2            5
top              TCP             AES       Chrome
freq            5074            3587         3908

=== Missing Values per Column (Showing > 0) ===
encryption_used    1515
dtype: int64

=== Target Variable ('attack_detected') Distribution ===
Value Counts:
attack_detected
0    4291
1    3007
Name: count, dtype: int64

Normalized:
attack_detected
0    0.587969
1    0.412031
Name: proportion, dtype: float64

--- Identifying Features and Target ---
Target column: 'attack_detected'
Identified 9 features.
  - 6 numeric features.
  - 3 categorical features.

--- Splitting Data (kaggle_no_outliers) (80% Train, 20% Test) ---
X_train shape: (5838, 9), y_train shape: (5838,)
X_test shape: (1460, 9), y_test shape: (1460,)
Data split successfully.

Fitting UNSCALED preprocessor (kaggle_no_outliers)...
Unscaled preprocessor fitted.

Fitting SCALED preprocessor (kaggle_no_outliers)...
Scaled preprocessor fitted.

========================================
 Model Training: UNSCALED Data (kaggle_no_outliers) - RF Only
========================================

--- Training and Evaluating Base RandomForestClassifier (KAGGLE_NO_OUTLIERS_UNSCALED) ---
Fitting Base RandomForest pipeline...
Base RandomForest fitting completed in 0.44 seconds.

--- Evaluating Base RandomForest Model on Test Set ---
Prediction completed in 0.01 seconds.
Accuracy: 0.8760

Classification Report:
              precision    recall  f1-score   support

           0       0.83      1.00      0.90       858
           1       0.99      0.71      0.82       602

    accuracy                           0.88      1460
   macro avg       0.91      0.85      0.86      1460
weighted avg       0.90      0.88      0.87      1460


Confusion Matrix:
[[854   4]
 [177 425]]
ROC AUC Score: 0.8540

--- Training and Evaluating RandomForestClassifier (KAGGLE_NO_OUTLIERS_UNSCALED) ---
Running GridSearchCV with 3 folds...
Fitting 3 folds for each of 24 candidates, totalling 72 fits
GridSearchCV completed in 2.63 seconds.

Best Parameters Found (RandomForest): {'classifier__max_depth': 10, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 150}
Best Cross-validation Accuracy (RandomForest): 0.8897

--- Evaluating Tuned RandomForest Model on Test Set ---
Prediction completed in 0.01 seconds.
Accuracy: 0.8788

Classification Report:
              precision    recall  f1-score   support

           0       0.83      1.00      0.91       858
           1       1.00      0.71      0.83       602

    accuracy                           0.88      1460
   macro avg       0.91      0.85      0.87      1460
weighted avg       0.90      0.88      0.87      1460


Confusion Matrix:
[[858   0]
 [177 425]]
ROC AUC Score: 0.8619

Best Tuned RandomForest model saved to: ./kaggle_analysis_results_final_v1/tuned_rf_model_kaggle_no_outliers_unscaled.pkl
Saved model size: 2.619 MB

========================================
 Model Training: SCALED Data (kaggle_no_outliers)
========================================

--- Training and Evaluating Base RandomForestClassifier (KAGGLE_NO_OUTLIERS_SCALED) ---
Fitting Base RandomForest pipeline...
Base RandomForest fitting completed in 0.45 seconds.

--- Evaluating Base RandomForest Model on Test Set ---
Prediction completed in 0.01 seconds.
Accuracy: 0.8760

Classification Report:
              precision    recall  f1-score   support

           0       0.83      1.00      0.90       858
           1       0.99      0.71      0.82       602

    accuracy                           0.88      1460
   macro avg       0.91      0.85      0.86      1460
weighted avg       0.90      0.88      0.87      1460


Confusion Matrix:
[[854   4]
 [177 425]]
ROC AUC Score: 0.8547

--- Training and Evaluating RandomForestClassifier (KAGGLE_NO_OUTLIERS_SCALED) ---
Running GridSearchCV with 3 folds...
Fitting 3 folds for each of 24 candidates, totalling 72 fits
GridSearchCV completed in 2.50 seconds.

Best Parameters Found (RandomForest): {'classifier__max_depth': 10, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 5, 'classifier__n_estimators': 100}
Best Cross-validation Accuracy (RandomForest): 0.8897

--- Evaluating Tuned RandomForest Model on Test Set ---
Prediction completed in 0.01 seconds.
Accuracy: 0.8788

Classification Report:
              precision    recall  f1-score   support

           0       0.83      1.00      0.91       858
           1       1.00      0.71      0.83       602

    accuracy                           0.88      1460
   macro avg       0.91      0.85      0.87      1460
weighted avg       0.90      0.88      0.87      1460


Confusion Matrix:
[[858   0]
 [177 425]]
ROC AUC Score: 0.8638

Best Tuned RandomForest model saved to: ./kaggle_analysis_results_final_v1/tuned_rf_model_kaggle_no_outliers_scaled.pkl
Saved model size: 1.577 MB

--- Tuning PCA Components + Evaluating PCA + Base RandomForestClassifier (KAGGLE_NO_OUTLIERS_SCALED) ---

Tuning PCA n_components in range: [5, 10, 15]...
  Testing PCA with n_components=5...
    n=5: Accuracy=0.8205, Fit Time=0.95s, Pred Time=0.02s
  Testing PCA with n_components=10...
    n=10: Accuracy=0.8192, Fit Time=1.36s, Pred Time=0.02s
  Testing PCA with n_components=15...
    n=15: Accuracy=0.8185, Fit Time=1.30s, Pred Time=0.02s

--- Best PCA Configuration Found ---
Best n_components: 5
Best Accuracy: 0.8205

PCA Tuning Results Summary:
   n_components  accuracy  fit_time  pred_time
0             5  0.820548  0.947242   0.015162
1            10  0.819178  1.361275   0.015008
2            15  0.818493  1.302263   0.015506

--- Evaluating Best PCA (n=5) + RandomForest Model on Test Set ---
Prediction time for best model: 0.01s
Accuracy (already calculated): 0.8205

Classification Report:
              precision    recall  f1-score   support

           0       0.79      0.94      0.86       858
           1       0.89      0.65      0.75       602

    accuracy                           0.82      1460
   macro avg       0.84      0.79      0.80      1460
weighted avg       0.83      0.82      0.81      1460


Confusion Matrix:
[[809  49]
 [213 389]]
ROC AUC Score: 0.8219

--- Training and Evaluating ANN + SMOTE (KAGGLE_NO_OUTLIERS_SCALED) ---
Preprocessing data for ANN...
Input dimension for ANN: 17
Applying SMOTE to the training data...
Shape before SMOTE: (5838, 17), Class distribution: [3433 2405]
SMOTE completed in 0.02 seconds.
Shape after SMOTE: (6866, 17), Class distribution: [3433 3433]

ANN Model Summary:
Model: "sequential_1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓
┃ Layer (type)                         ┃ Output Shape                ┃         Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩
│ dense_3 (Dense)                      │ (None, 64)                  │           1,152 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dropout_2 (Dropout)                  │ (None, 64)                  │               0 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dense_4 (Dense)                      │ (None, 32)                  │           2,080 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dropout_3 (Dropout)                  │ (None, 32)                  │               0 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dense_5 (Dense)                      │ (None, 1)                   │              33 │
└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘
 Total params: 3,265 (12.75 KB)
 Trainable params: 3,265 (12.75 KB)
 Non-trainable params: 0 (0.00 B)


Training ANN model...
Epoch 1/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1:22[0m 974ms/step - accuracy: 0.4219 - loss: 0.7376[1m62/86[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 820us/step - accuracy: 0.5331 - loss: 0.6987  [1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 7ms/step - accuracy: 0.5597 - loss: 0.6834  [1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m2s[0m 16ms/step - accuracy: 0.5606 - loss: 0.6829 - val_accuracy: 0.6608 - val_loss: 0.6346
Epoch 2/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 27ms/step - accuracy: 0.8125 - loss: 0.5096[1m56/86[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 916us/step - accuracy: 0.7379 - loss: 0.5474[1m84/86[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 1ms/step - accuracy: 0.7396 - loss: 0.5444  [1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.7399 - loss: 0.5440 - val_accuracy: 0.6921 - val_loss: 0.6335
Epoch 3/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 27ms/step - accuracy: 0.7188 - loss: 0.5652[1m54/86[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 946us/step - accuracy: 0.7700 - loss: 0.5059[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.7704 - loss: 0.5055 - val_accuracy: 0.7154 - val_loss: 0.6092
Epoch 4/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 27ms/step - accuracy: 0.8281 - loss: 0.3894[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 594us/step - accuracy: 0.7963 - loss: 0.4717[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.7963 - loss: 0.4717 - val_accuracy: 0.7293 - val_loss: 0.5749
Epoch 5/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 28ms/step - accuracy: 0.7500 - loss: 0.4784[1m75/86[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 684us/step - accuracy: 0.8203 - loss: 0.4422[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8202 - loss: 0.4421 - val_accuracy: 0.7402 - val_loss: 0.5411
Epoch 6/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 26ms/step - accuracy: 0.8438 - loss: 0.4127[1m83/86[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 613us/step - accuracy: 0.8274 - loss: 0.4287[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8277 - loss: 0.4282 - val_accuracy: 0.7620 - val_loss: 0.5019
Epoch 7/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 28ms/step - accuracy: 0.8594 - loss: 0.3593[1m81/86[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 633us/step - accuracy: 0.8397 - loss: 0.4012[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8397 - loss: 0.4015 - val_accuracy: 0.7562 - val_loss: 0.5029
Epoch 8/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 28ms/step - accuracy: 0.9062 - loss: 0.3256[1m77/86[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 660us/step - accuracy: 0.8527 - loss: 0.3934[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8526 - loss: 0.3926 - val_accuracy: 0.7606 - val_loss: 0.4986
Epoch 9/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 29ms/step - accuracy: 0.9062 - loss: 0.3135[1m71/86[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 721us/step - accuracy: 0.8584 - loss: 0.3799[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8582 - loss: 0.3799 - val_accuracy: 0.7627 - val_loss: 0.4752
Epoch 10/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 27ms/step - accuracy: 0.8906 - loss: 0.3122[1m80/86[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 637us/step - accuracy: 0.8561 - loss: 0.3751[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8564 - loss: 0.3746 - val_accuracy: 0.7584 - val_loss: 0.4793
Epoch 11/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 27ms/step - accuracy: 0.8750 - loss: 0.3373[1m50/86[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 1ms/step - accuracy: 0.8718 - loss: 0.3504 [1m72/86[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 1ms/step - accuracy: 0.8702 - loss: 0.3529[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step - accuracy: 0.8695 - loss: 0.3541 - val_accuracy: 0.7627 - val_loss: 0.4655
Epoch 12/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 27ms/step - accuracy: 0.9062 - loss: 0.2852[1m78/86[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 661us/step - accuracy: 0.8663 - loss: 0.3544[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8667 - loss: 0.3542 - val_accuracy: 0.7620 - val_loss: 0.4634
Epoch 13/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 28ms/step - accuracy: 0.8750 - loss: 0.3489[1m85/86[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 601us/step - accuracy: 0.8735 - loss: 0.3437[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8735 - loss: 0.3437 - val_accuracy: 0.7642 - val_loss: 0.4573
Epoch 14/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 27ms/step - accuracy: 0.8906 - loss: 0.2807[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8762 - loss: 0.3333 - val_accuracy: 0.7649 - val_loss: 0.4553
Epoch 15/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 28ms/step - accuracy: 0.8750 - loss: 0.3341[1m77/86[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 661us/step - accuracy: 0.8836 - loss: 0.3253[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8831 - loss: 0.3264 - val_accuracy: 0.7671 - val_loss: 0.4356
Epoch 16/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 27ms/step - accuracy: 0.9062 - loss: 0.3074[1m81/86[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 626us/step - accuracy: 0.8834 - loss: 0.3284[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8831 - loss: 0.3287 - val_accuracy: 0.7686 - val_loss: 0.4366
Epoch 17/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 26ms/step - accuracy: 0.8281 - loss: 0.3955[1m79/86[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 642us/step - accuracy: 0.8778 - loss: 0.3294[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8778 - loss: 0.3294 - val_accuracy: 0.7627 - val_loss: 0.4346
Epoch 18/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 26ms/step - accuracy: 0.9062 - loss: 0.2919[1m79/86[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 649us/step - accuracy: 0.8786 - loss: 0.3297[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8788 - loss: 0.3294 - val_accuracy: 0.7635 - val_loss: 0.4606
Epoch 19/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 29ms/step - accuracy: 0.8281 - loss: 0.4052[1m62/86[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 839us/step - accuracy: 0.8776 - loss: 0.3270[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8789 - loss: 0.3260 - val_accuracy: 0.7700 - val_loss: 0.4297
Epoch 20/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 28ms/step - accuracy: 0.8906 - loss: 0.3274[1m82/86[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 622us/step - accuracy: 0.8835 - loss: 0.3247[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8835 - loss: 0.3246 - val_accuracy: 0.7700 - val_loss: 0.4347
Epoch 21/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 28ms/step - accuracy: 0.9062 - loss: 0.2842[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8783 - loss: 0.3231 - val_accuracy: 0.7707 - val_loss: 0.4482
Epoch 22/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 26ms/step - accuracy: 0.8438 - loss: 0.3563[1m82/86[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 624us/step - accuracy: 0.8831 - loss: 0.3163[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8830 - loss: 0.3164 - val_accuracy: 0.7656 - val_loss: 0.4335
Epoch 23/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 26ms/step - accuracy: 0.8906 - loss: 0.3355[1m82/86[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 624us/step - accuracy: 0.8908 - loss: 0.3071[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8904 - loss: 0.3076 - val_accuracy: 0.7664 - val_loss: 0.4270
Epoch 24/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 27ms/step - accuracy: 0.9531 - loss: 0.2160[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8852 - loss: 0.3141 - val_accuracy: 0.7700 - val_loss: 0.4309
Epoch 25/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 26ms/step - accuracy: 0.8750 - loss: 0.3370[1m65/86[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 798us/step - accuracy: 0.8851 - loss: 0.3130[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 1ms/step - accuracy: 0.8852 - loss: 0.3133  [1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8852 - loss: 0.3133 - val_accuracy: 0.7649 - val_loss: 0.4509
Epoch 26/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 29ms/step - accuracy: 0.9219 - loss: 0.2458[1m64/86[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 795us/step - accuracy: 0.8911 - loss: 0.3074[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8897 - loss: 0.3091 - val_accuracy: 0.7729 - val_loss: 0.4158
Epoch 27/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 28ms/step - accuracy: 0.8438 - loss: 0.3566[1m82/86[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 622us/step - accuracy: 0.8836 - loss: 0.3119[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8837 - loss: 0.3118 - val_accuracy: 0.7678 - val_loss: 0.4367
Epoch 28/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 27ms/step - accuracy: 0.9844 - loss: 0.1635[1m73/86[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 700us/step - accuracy: 0.8965 - loss: 0.2914[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8949 - loss: 0.2942 - val_accuracy: 0.7729 - val_loss: 0.4092
Epoch 29/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 26ms/step - accuracy: 0.8125 - loss: 0.3532[1m77/86[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 659us/step - accuracy: 0.8838 - loss: 0.3087[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8841 - loss: 0.3089 - val_accuracy: 0.7678 - val_loss: 0.4370
Epoch 30/30
[1m 1/86[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 28ms/step - accuracy: 0.8438 - loss: 0.3824[1m79/86[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 647us/step - accuracy: 0.8876 - loss: 0.3083[1m86/86[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step - accuracy: 0.8876 - loss: 0.3083 - val_accuracy: 0.7729 - val_loss: 0.4228
Restoring model weights from the end of the best epoch: 28.
ANN training completed in 7.65 seconds.

--- Evaluating ANN + SMOTE Model on Test Set ---
[1m 1/46[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m6s[0m 148ms/step[1m46/46[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step  [1m46/46[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 4ms/step
Prediction completed in 0.35 seconds.
Accuracy: 0.8726

Classification Report:
              precision    recall  f1-score   support

           0       0.83      0.99      0.90       858
           1       0.97      0.71      0.82       602

    accuracy                           0.87      1460
   macro avg       0.90      0.85      0.86      1460
weighted avg       0.89      0.87      0.87      1460


Confusion Matrix:
[[847  11]
 [175 427]]

ANN model saved to: ./kaggle_analysis_results_final_v1/ann_smote_model_kaggle_no_outliers_scaled.keras
Saved model size: 0.066 MB

--- Running Fuzzy C-Means Clustering (KAGGLE_NO_OUTLIERS_SCALED) ---
Preprocessing numeric data for FCM...
Scaled numeric data shape for FCM: (7298, 6)

--- Running Base Fuzzy C-Means (n=2, m=2.0) ---
Base FCM clustering completed in 0.02 seconds.

=== Base Fuzzy C-Means Results ===
Accuracy: 0.6056
Classification Report:
              precision    recall  f1-score   support

           0       0.68      0.62      0.65      4291
           1       0.52      0.58      0.55      3007

    accuracy                           0.61      7298
   macro avg       0.60      0.60      0.60      7298
weighted avg       0.61      0.61      0.61      7298

Confusion Matrix:
[[2671 1620]
 [1258 1749]]
Silhouette Score: 0.1544

--- Running Tuned Fuzzy C-Means ---

Tuning FCM parameters (n_clusters, m)...
  Trying n_clusters=2, m=1.5...
    FCM iteration took 0.13 seconds.
    Accuracy: 0.6241, Silhouette: 0.1441, FPC: 0.5827
  Trying n_clusters=2, m=2.0...
    FCM iteration took 0.02 seconds.
    Accuracy: 0.6056, Silhouette: 0.1544, FPC: 0.5000
  Trying n_clusters=2, m=2.5...
    FCM iteration took 0.01 seconds.
    Accuracy: 0.5981, Silhouette: 0.1474, FPC: 0.5000
  Trying n_clusters=3, m=1.5...
    FCM iteration took 0.13 seconds.
    Accuracy: 0.5921, Silhouette: 0.1428, FPC: 0.4613
  Trying n_clusters=3, m=2.0...
    FCM iteration took 0.02 seconds.
    Accuracy: 0.6039, Silhouette: 0.1043, FPC: 0.3333
  Trying n_clusters=3, m=2.5...
    FCM iteration took 0.02 seconds.
    Accuracy: 0.6039, Silhouette: 0.1061, FPC: 0.3333
  Trying n_clusters=4, m=1.5...
    FCM iteration took 0.26 seconds.
    Accuracy: 0.5903, Silhouette: 0.1399, FPC: 0.4085
  Trying n_clusters=4, m=2.0...
    FCM iteration took 0.02 seconds.
    Accuracy: 0.6437, Silhouette: 0.0886, FPC: 0.2500
  Trying n_clusters=4, m=2.5...
    FCM iteration took 0.02 seconds.
    Accuracy: 0.6458, Silhouette: 0.1071, FPC: 0.2500

--- Best Fuzzy C-Means Results (from Tuning) ---
Best Parameters Found: n_clusters=4, m=2.5
Best Accuracy (from tuning evaluation): 0.6458

Classification Report (Best FCM):
              precision    recall  f1-score   support

           0       0.71      0.68      0.69      4291
           1       0.57      0.60      0.58      3007

    accuracy                           0.65      7298
   macro avg       0.64      0.64      0.64      7298
weighted avg       0.65      0.65      0.65      7298


Confusion Matrix:
[[2917 1374]
 [1211 1796]]
Silhouette Score (Best): 0.1071

FCM Tuning Results Summary:
   n_clusters    m  accuracy  silhouette       fpc
8           4  2.5  0.645793    0.107144  0.250000
7           4  2.0  0.643738    0.088556  0.250000
0           2  1.5  0.624144    0.144068  0.582692
1           2  2.0  0.605645    0.154404  0.500000
4           3  2.0  0.603864    0.104332  0.333333
5           3  2.5  0.603864    0.106096  0.333333
2           2  2.5  0.598109    0.147424  0.500000
3           3  1.5  0.592080    0.142825  0.461279
6           4  1.5  0.590299    0.139906  0.408528

Re-running FCM with best params (n=4, m=2.5) to get centers...
Best Tuned Fuzzy C-Means centers saved to: ./kaggle_analysis_results_final_v1/tuned_fcm_centers_kaggle_no_outliers_scaled_n4_m2.5.pkl
Saved centers file size: 0.000325 MB

--- SHAP Analysis (Based on Tuned SCALED RF - kaggle_no_outliers) ---

--- Running SHAP Analysis (KAGGLE_NO_OUTLIERS_SCALED) ---
Preprocessing test data for SHAP...
Shape of data transformed for SHAP: (1460, 17)
Number of features for SHAP: 17
Creating SHAP TreeExplainer...
Calculating SHAP values for 100 samples...
SHAP calculation took 0.16 seconds.
SHAP values format: Single array (samples, features, classes).

=== Mean Absolute SHAP Values (Feature Importance) ===
failed_logins              0.130857
ip_reputation_score        0.113146
login_attempts             0.081267
browser_type_Unknown       0.029457
browser_type_Chrome        0.008462
session_duration           0.008256
network_packet_size        0.004721
encryption_used_Missing    0.003933
encryption_used_AES        0.003711
browser_type_Firefox       0.002919
protocol_type_UDP          0.002358
protocol_type_TCP          0.002134
browser_type_Edge          0.001834
browser_type_Safari        0.001702
encryption_used_DES        0.001206
protocol_type_ICMP         0.000470
unusual_time_access        0.000000
dtype: float64

=== Top 10 Most Important Features (SHAP) ===
failed_logins              0.130857
ip_reputation_score        0.113146
login_attempts             0.081267
browser_type_Unknown       0.029457
browser_type_Chrome        0.008462
session_duration           0.008256
network_packet_size        0.004721
encryption_used_Missing    0.003933
encryption_used_AES        0.003711
browser_type_Firefox       0.002919
dtype: float64

Generating SHAP Summary Plot (KAGGLE_NO_OUTLIERS_SCALED) (Class 1)...

========================================
 Correlation Feature Selection (kaggle_no_outliers)
========================================

No features identified for dropping based on correlation threshold. Skipping runs on correlation selected features.

############################################################
 SKIPPING DYNAMIC SHAP FEATURE SELECTION: SHAP analysis did not return importance values.
############################################################

==================================================
 FULL Analysis Complete
==================================================
Results saved in: ./kaggle_analysis_results_final_v1
Summary log: ./kaggle_analysis_results_final_v1/summary.txt
